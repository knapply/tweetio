% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/proto_net.R
\name{as_proto_net}
\alias{as_proto_net}
\alias{as_proto_net.data.frame}
\alias{as_proto_net.data.table}
\title{Convert Various Objects to \code{proto_net}s}
\usage{
as_proto_net(
  tweet_df,
  target_class = c("user", "hashtag", "url", "media"),
  all_status_data = FALSE,
  all_user_data = FALSE,
  as_tibble = tweetio_as_tibble(),
  ...
)

\method{as_proto_net}{data.frame}(
  tweet_df,
  target_class = c("user", "hashtag", "url", "media"),
  all_status_data = FALSE,
  all_user_data = FALSE,
  as_tibble = tweetio_as_tibble(),
  ...
)

\method{as_proto_net}{data.table}(
  tweet_df,
  target_class = c("user", "hashtag", "url", "media"),
  all_status_data = FALSE,
  all_user_data = FALSE,
  as_tibble = tweetio_as_tibble(),
  ...
)
}
\arguments{
\item{tweet_df}{A data frame of tweets, as obtained by \code{read_tweets()} or
one of \code{{rtweet}}'s collection functions, e.g. \code{\link[rtweet:search_tweets]{rtweet::search_tweets()}}.}

\item{target_class}{\code{character(1L)}, Default: \code{"user"}. The class of nodes to use as
the second half of each dyad (target/to/head). See Details.}

\item{all_status_data}{\code{logical(1L)}, Default: \code{FALSE}. Whether to attach all relevant
status data to the \code{edges} data frame, which can then be used as edge attributes for
downstream tasks.}

\item{all_user_data}{\code{logical(1L)}, Default: \code{FALSE}. Whether to attach all relevant
user data to the \code{nodes} data frame, which can then be uses as node attributes for
downstream tasks.}

\item{as_tibble}{\verb{<logical>}, Default: \code{tweetio_as_tibble()}.
Whether a \code{\link[tibble:tibble]{tibble::tibble()}} should be returned. Ignored if the \code{{tibble}}
package is not installed.}

\item{...}{Arguments passed to or from other methods.}
}
\description{
A \code{proto_net} is a \code{list} containing two data frames named \code{edges} and \code{nodes}.
}
\details{
\itemize{
\item In a \code{proto_net}, users are always to source/from/tail side of dyads. \code{target_class}
defaults to \code{"user"}, which creates edges where users on both sides of dyads.
\itemize{
\item However users can also share edges with \code{"hashtag"}s, \code{"url"}s, or \code{"media"}, so
those values are also valid to provide to \code{target_class} to create two-mode/bipartite
\code{proto_net}s.
}
\item The edges of a \code{proto_net} represent the statuses that form each tie, and status-specific
columns are attached to the edges.
\item Casing
\itemize{
\item Twitter hashtags are not case-sensitive, so if \code{target_class} is \code{"hashtag"} they will
be cast to lower-case so they can represent the same node in downstream tasks.
\item URLs (after the domain) can be case-sensitive, so they are left as-is.
\itemize{
\item If you decide to cast URLs to lower-case yourself, exercise caution with Twitter's
media URLs, as they contain a case-sensitive hash.
}
}
\item \code{all_status_data} and \code{all_user_data} default to \code{FALSE} as they can be performance
bottlenecks for large data sets, but they provide a way of building richly decorated
networks with the maximum amount of attribute data embedded in the graph structure.
}
}
\examples{
path_to_tweet_file <- example_tweet_file()

tweet_df <- read_tweets(path_to_tweet_file)

tweet_df \%>\%
  as_proto_net(as_tibble = TRUE)

tweet_df \%>\% 
  as_proto_net(target_class = "hashtag", as_tibble = TRUE)
  
tweet_df \%>\% 
  as_proto_net(target_class = "url", as_tibble = TRUE)
  
tweet_df \%>\% 
  as_proto_net(target_class = "media", as_tibble = TRUE)
  
tweet_df \%>\% 
  as_proto_net(all_status_data = TRUE, all_user_data = TRUE, as_tibble = TRUE)

}
\author{
Brendan Knapp \email{brendan.g.knapp@gmail.com}
}
